<?php
/**
 * @file
 * Bibliotek info module.
 */

/**
 * Implements hook_block_info().
 */
function ding_bibliotek_info_block_info() {
  $blocks = array();

  $blocks['bibliotek_info'] = array(
    'info' => t('Ding bibliotek info'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ding_bibliotek_info_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'bibliotek_info':
      $block['subject'] = '';
      $block['content'] = ding_bibliotek_info_content();
      break;
  }

  return $block;
}

/**
 * Created bibliotek info content.
 *
 * @return string
 *   Markup string.
 */
function ding_bibliotek_info_content() {
  drupal_add_css(drupal_get_path('module', 'ding_bibliotek_info') . '/css/ding_bibliotek_info.css', array('type' => 'file'));

  $query = arg(2);
  return '<a href="http://bibliotek.dk" class="bibliotek-info-logo" target="_blank"></a><strong>' . t('Did you not find what you were looking for?') . '</strong><br>' . t('Try to search for !phrase on bibliotek.dk.', array(
    '!phrase' => l($query, 'http://bibliotek.dk/search/work/' . $query, array(
      'attributes' => array(
        'target' => '_blank',
      )
    ))
  ));
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Add bibliotek info as a pane block on the search results page.
 */
function ding_bibliotek_info_preprocess_25_50_25(&$variables) {
  $search_result = arg(0) == 'search' && arg(1) == 'ting';

  // Return if no search result page.
  if (!$search_result) {
    return;
  }

  // Generate new pane which contains bibliotek info.
  $new_pane = panels_new_pane('bibliotek_info','bibliotek_info',TRUE);
  if ($new_pane) {
    // Generate block content.
    $block = module_invoke('ding_bibliotek_info', 'block_view', 'bibliotek_info');
    $bibliotek_info_markup =
      '<div class="panel-pane pane-block pane-bibliotek-info">' .
      '<div class="pane-content">' .
      render($block['content']) .
      '</div>' .
      '</div>';

    // Add content to the pane.
    $new_pane->pid = 'new-bibliotek_info';
    $new_pane->configuration['body'] = $bibliotek_info_markup;
    $new_pane->panel = 'main_content';

    // Add pane content to the variables array.
    $variables['renderer']->prepared['panes'][$new_pane->pid] = $new_pane;
    $variables['renderer']->rendered['panes'][$new_pane->pid] = $bibliotek_info_markup;
  }

  // Rebuild main content region with existing panes.
  $panes = $variables['renderer']->prepared['panes'];
  $panes = array_filter($panes, function($i) {
    return $i->panel == 'main_content';
  });

  // Ensure that bibliotek info block is under the search result pane.
  $position = 0;
  array_walk($panes, function($i, $k) use(&$position) {
    if ($i->subtype == 'search_result') {
      $position = $i->position;
    }
  });
  $new_pane->position = $position + 1;

  // Prepare all rendered panes to be displayed in the main content.
  $pids = array_keys($panes);
  $rendered_panes = $variables['renderer']->rendered['panes'];
  foreach ($pids as $pid) {
    if (!empty($rendered_panes[$pid])) {
      $output[$panes[$pid]->position] = $rendered_panes[$pid];
    }
  }
  uksort($output, function($a, $b) {
    return $a >= $b;
  });

  // Update main content with newly generated output.
  $variables['content']['main_content'] = implode('', $output);
}
